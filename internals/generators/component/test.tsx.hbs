import React from 'react'
import { render } from '@testing-library/react'
{{#if wantMessages}}
import { IntlProvider } from 'react-intl'
{{/if}}
// import 'jest-dom/extend-expect' // add some helpful assertions

// Import de Theme Provider
import { ThemeProvider } from 'utils/styled-components'
import Theme from 'common/Theme'

import {{ properCase name }} from '../index'
{{#if wantMessages}}
import { DEFAULT_LOCALE } from 'utils/locales'
{{/if}}

describe('<{{ properCase name }} />', () => {
{{#if wantMessages}}
  const renderComponent = (props = {}) =>
    render(
      <IntlProvider locale={DEFAULT_LOCALE}>
        <ThemeProvider theme={Theme}>
          <{{ properCase name }} {...props} />
        </ThemeProvider>
      </IntlProvider>,
    )
{{else}}
  const renderComponent = (props = {}) =>
    render(
      <ThemeProvider theme={Theme}>
        <{{ properCase name }} {...props} />
      </ThemeProvider>,
    )
{{/if}}

  it('Expect to not log errors in console', () => {
    const spy = jest.spyOn(global.console, 'error')

    renderComponent()

    expect(spy).not.toHaveBeenCalled()
  })

  it('Expect to have additional unit tests specified', () => {
    expect(true).toEqual(false)
  })

  /**
   * Unskip this test to use it
   *
   * @see {@link https://jestjs.io/docs/en/api#testskipname-fn}
   */
  it.skip('Should render and match the snapshot', () => {
    const {
      container: { firstChild },
    } = renderComponent()

    expect(firstChild).toMatchSnapshot()
  })
})
